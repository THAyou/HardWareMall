
@{
    ViewData["Title"] = "人员管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- 正文开始 -->
<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body table-tool-mini">
            <div class="layui-form toolbar">
                <div class="layui-form-item">
                    <div class="layui-inline" style="padding-right: 110px;">
                        <button class="layui-btn icon-btn" lay-filter="formSubSearchUser" lay-submit>
                            <i class="layui-icon">&#xe615;</i>刷新
                        </button>
                        <button id="btnAddUser" class="layui-btn icon-btn"><i class="layui-icon">&#xe654;</i>添加</button>
                    </div>
                </div>
            </div>

            <table class="layui-table" id="tableUser" lay-filter="tableUser"></table>
        </div>
    </div>
</div>

<!-- 表格状态列 -->
<script type="text/html" id="tableStateUser">
    <input type="checkbox" lay-filter="ckStateUser" value="{{d.id}}" lay-skin="switch"
           lay-text="启用|禁用" {{d.status==1 ? 'checked':''}} />
</script>

<!-- 表格操作列 -->
<script type="text/html" id="tableBarUser">
    <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="edit">修改</a>
    <a class="layui-btn layui-btn-xs" lay-event="reset">重置密码</a>
</script>

<!-- 表单弹窗 -->
<script type="text/html" id="modelUser">
    <form id="modelUserForm" lay-filter="modelUserForm" class="layui-form model-form">
        <input name="id" type="hidden" />
        <div class="layui-form-item">
            <label class="layui-form-label">账号</label>
            <div class="layui-input-block">
                <input name="userName" placeholder="请输入账号" type="text" class="layui-input" maxlength="20"
                       lay-verType="tips" lay-verify="required" required />
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">姓名</label>
            <div class="layui-input-block">
                <input name="realName" placeholder="请输入姓名" type="text" class="layui-input" maxlength="20"
                       lay-verType="tips" lay-verify="required" required />
            </div>
        </div>
        <div class="layui-form-item text-right">
            <button class="layui-btn layui-btn-primary" type="button" ew-event="closePageDialog">取消</button>
            <button class="layui-btn" lay-filter="modelSubmitUser" lay-submit>保存</button>
        </div>
    </form>
</script>

<script>
    layui.use(['layer', 'form', 'table', 'util', 'admin', 'laydate', 'zTree'], function () {
        var $ = layui.jquery;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var util = layui.util;
        var admin = layui.admin;
        var laydate = layui.laydate;

        // 渲染表格
        var insTb = table.render({
            elem: '#tableUser',
            url: '/api/System/getUserList',
            page: true,
            cellMinWidth: 100,
            cols: [[
                { field: 'userName', sort: true, title: '编号' },
                { field: 'realName', sort: true, title: '姓名' },
                {
                    field: 'createDate', sort: true, templet: function (d) {
                        return util.toDateString(d.createTime);
                    }, title: '创建时间'
                },
                { field: 'status', sort: true, templet: '#tableStateUser', title: '状态' },
                { align: 'center', toolbar: '#tableBarUser', title: '操作', minWidth: 200 }
            ]]
        });

        // 添加
        $('#btnAddUser').click(function () {
            showEditModel();
        });

        // 搜索
        form.on('submit(formSubSearchUser)', function (data) {
            insTb.reload({ where: data.field }, 'data');
        });

        // 工具条点击事件
        table.on('tool(tableUser)', function (obj) {
            var data = obj.data;
            var layEvent = obj.event;
            if (layEvent === 'edit') { // 修改
                showEditModel(data);
            } else if (layEvent === 'reset') { // 重置密码
                resetPsw(data.id, data.realName);
            } else if (layEvent == 'role') {
                showPermModel(data.code);
            }
        });


        // 显示表单弹窗
        function showEditModel(mUser) {
            admin.open({
                type: 1,
                title: (mUser ? '修改' : '添加') + '用户',
                content: $('#modelUser').html(),
                success: function (layero, dIndex) {
                    // 回显数据
                    form.val('modelUserForm', mUser);
                    var Type = '1';
                    if (mUser != null) {
                        Type = '0';
                    }
                    // 表单提交事件
                    form.on('submit(modelSubmitUser)', function (data) {
                        layer.load(2);
                        $.ajax({
                            url: '/api/System/saveUser?Type='+Type,
                            type: 'Post',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify(data.field),
                            async: false,
                            dataType: 'json',
                            success: function (result) {
                                layer.closeAll('loading');
                                if (result.success) {
                                    layer.close(dIndex);
                                    layer.msg(result.message, { icon: 1 });
                                    insTb.reload({}, 'data');
                                } else {
                                    layer.msg(result.message, { icon: 2 });
                                }
                            }
                        });
                        return false;
                    });
                }
            });
        }

        // 修改用户状态
        form.on('switch(ckStateUser)', function (obj) {
            layer.load(2);
            $.ajax({
                url: '/api/System/updataStatus',
                type: 'PUT',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify({ Id: obj.elem.value, status: obj.elem.checked ? 1 : 0 }),
                async: false,
                dataType: 'json',
                success: function (result) {
                    layer.closeAll('loading');
                    if (result.success) {
                        layer.msg(result.message, { icon: 1 });
                    } else {
                        layer.msg(result.message, { icon: 2 });
                        $(obj.elem).prop('checked', !obj.elem.checked);
                        form.render('checkbox');
                    }
                }
            });
        });

        // 重置密码
        function resetPsw(Id, realName) {
            layer.confirm('确定要重置“' + realName + '”的登录密码吗？', {
                skin: 'layui-layer-admin',
                shade: .1
            }, function (i) {
                layer.close(i);
                layer.load(2);
                $.ajax({
                    url: '/api/System/resetPsw',
                    type: 'PUT',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ Id: Id }),
                    async: false,
                    dataType: 'json',
                    success: function (result) {
                        layer.closeAll('loading');
                        if (result.success) {
                            layer.close(dIndex);
                            layer.msg(result.message, { icon: 1 });
                            insTb.reload({}, 'data');
                        } else {
                            layer.msg(result.message, { icon: 2 });
                        }
                    }
                });
            }, 'json');


        }
    });
</script>